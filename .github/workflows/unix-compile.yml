name: unix-compile
on:
  workflow_dispatch:

jobs:
  compile:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version:
          - stable
        os:
          - ubuntu-latest
          - macOS-latest
    steps:
    - uses: actions/checkout@v1
    - uses: RpxdYTX/install-glfw-deps@v2
    - uses: iffy/install-nim@v4.1.1
      with:
        version: ${{ matrix.version }}
    - name: cli
      continue-on-error: true
      run: |
        nimble install -y
        nim c ./pulsar_cli.nim
    - name: linux_gui
      if: matrix.os == 'ubuntu-latest'
      run: |
        nim --app:gui c -d:release --gc:orc ./pulsar.nim
        chmod +x ./pulsar
    - name: linux_min
      if: matrix.os == 'ubuntu-latest'
      run: |
        nim --app:gui c -d:release --gc:orc ./pulsar_min.nim
        chmod +x ./pulsar_min
    - name: mac_min
      if: matrix.os == 'macOS-latest'
      run: |
        nim --app:gui --out:pulsar_min.app c -d:release --gc:orc ./pulsar_min.nim
        chmod +x ./pulsar_min.app
    - name: mac_gui
      if: matrix.os == 'macOS-latest'
      run: |
        nim --app:gui --out:pulsar.app c -d:release --gc:orc ./pulsar.nim
        chmod +x ./pulsar.app
    - name: python_lib
      run: |
        nim c --app:lib --out:./User_templates/python/pulsar_py.so --threads:on pulsar_py.nim
    - uses: actions/upload-artifact@v2
      with:
        name: 'artifact_${{ matrix.os }}'
        path: |
          ./
          *.nim
          !**/*.nim
